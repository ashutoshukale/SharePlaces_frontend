{"version":3,"file":"static/js/981.be0ac627.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/Validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./PlaceForm.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/Validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook.js\";\nimport useForm from \"../../shared/hooks/form-hook.js\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal.js\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner.js\";\nimport { AuthContext } from \"../../shared/context/auth-context.js\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload.js\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", formState.inputs.title.value);\n    formData.append(\"description\", formState.inputs.description.value);\n    formData.append(\"address\", formState.inputs.address.value);\n    formData.append(\"image\", formState.inputs.image.value);\n    try {\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/`,\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n\n      history.push(\"/\");\n      // Redirect user to a different page\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay={true} />\n        </div>\n      )}\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n          id=\"title\"\n          type=\"text\"\n          element=\"input\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description, atleast 5 characters\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please Provide an Image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        type=\"file\"\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jped\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please Pick an Image</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../util/Validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, isValid, onInput, value]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop.js\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content  ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity, // whether overall form is valid or not\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useRef, useCallback, useEffect, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHtttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHtttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHtttpRequests.current = activeHtttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHtttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["NewPlace","auth","useContext","AuthContext","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","isLoading","error","sendRequest","clearError","useHttpClient","_jsxs","React","children","_jsx","ErrorModal","onClear","className","LoadingSpinner","asOverlay","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","err","Input","id","type","element","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","onClick","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","createPortal","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","formValid","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHtttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}