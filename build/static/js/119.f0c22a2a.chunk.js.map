{"version":3,"file":"static/js/119.f0c22a2a.chunk.js","mappings":"wIAIA,MAQA,EARaA,IAETC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,QAAQF,EAAME,YAAaC,MAAOH,EAAMG,MAAMC,SAC3DJ,EAAMI,U,2ECFb,MAaA,EAbmBJ,IAEfC,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CACJC,SAAUN,EAAMO,QAChBC,OAAO,qBACPC,OAAQT,EAAMU,MACdC,QAAQV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACC,QAASb,EAAMO,QAAQH,SAAC,SAAcA,UAEtDH,EAAAA,EAAAA,KAAA,KAAAG,SAAIJ,EAAMU,S,uFCPhB,MAAMI,EAAgBd,IACpB,MAAMe,GACJC,EAAAA,EAAAA,MAAA,OAAKd,UAAW,SAASF,EAAME,YAAaC,MAAOH,EAAMG,MAAMC,SAAA,EAC7DH,EAAAA,EAAAA,KAAA,UAAQC,UAAW,iBAAiBF,EAAMiB,cAAcb,UACtDH,EAAAA,EAAAA,KAAA,MAAAG,SAAKJ,EAAMQ,YAEbQ,EAAAA,EAAAA,MAAA,QACEE,SACElB,EAAMkB,SAAWlB,EAAMkB,SAAYC,GAAUA,EAAMC,iBACpDhB,SAAA,EAEDH,EAAAA,EAAAA,KAAA,OAAKC,UAAW,mBAAmBF,EAAMqB,eAAejB,SACrDJ,EAAMI,YAETH,EAAAA,EAAAA,KAAA,UAAQC,UAAW,iBAAiBF,EAAMsB,cAAclB,SACrDJ,EAAMW,eAKf,OAAOY,EAAAA,EAAAA,cAAaR,EAASS,SAASC,eAAe,cAAc,EAoBrE,EAjBezB,IAEXgB,EAAAA,EAAAA,MAACU,EAAAA,SAAc,CAAAtB,SAAA,CACZJ,EAAMS,OAAQR,EAAAA,EAAAA,KAAC0B,EAAAA,EAAQ,CAACd,QAASb,EAAMM,YACxCL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAa,CACZC,GAAI7B,EAAMS,KACVqB,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAO7B,UAElBH,EAAAA,EAAAA,KAACa,EAAY,IAAKd,Q,+CCtCnB,MAAMkC,EAAgBA,KAC3B,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpC3B,EAAO4B,IAAYD,EAAAA,EAAAA,YAEpBE,GAAsBC,EAAAA,EAAAA,QAAO,IAE7BC,GAAcC,EAAAA,EAAAA,cAClBC,eAAOC,GAAoD,IAA/CC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAOG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClDV,GAAa,GACb,MAAMe,EAAgB,IAAIC,gBAC1Bb,EAAoBc,QAAQC,KAAKH,GACjC,IACE,MAAMI,QAAiBC,MAAMZ,EAAK,CAChCC,SACAI,OACAC,UACAO,OAAQN,EAAcM,SAGlBC,QAAqBH,EAASI,OAKpC,GAHApB,EAAoBc,QAAUd,EAAoBc,QAAQO,QACvDC,GAAYA,IAAYV,KAEtBI,EAASO,GACZ,MAAM,IAAIC,MAAML,EAAaM,SAG/B,OADA5B,GAAa,GACNsB,CACT,CAAE,MAAOO,GAGP,MAFA3B,EAAS2B,EAAID,SACb5B,GAAa,GACP6B,CACR,CACF,GACA,IAaF,OANAC,EAAAA,EAAAA,YAAU,IACD,KACL3B,EAAoBc,QAAQc,SAASC,GAAcA,EAAUC,SAAQ,GAEtE,IAEI,CAAElC,YAAWzB,QAAO+B,cAAa6B,WAVrBA,KACjBhC,EAAS,KAAK,EASoC,C,gFC9CtD,MAYA,EAZetC,IAEXC,EAAAA,EAAAA,KAAA,OAAKC,UAAW,UAAUF,EAAME,YAAaC,MAAOH,EAAMG,MAAMC,UAC9DH,EAAAA,EAAAA,KAAA,OACEsE,IAAKvE,EAAMwE,MACXC,IAAKzE,EAAMyE,IACXtE,MAAO,CAAEuE,MAAO1E,EAAM0E,MAAOC,OAAQ3E,EAAM0E,W,aCHnD,MAuBA,EAvBkB1E,IAEdC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWE,UACvBH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CAAC1E,UAAU,qBAAoBE,UAClCY,EAAAA,EAAAA,MAAC6D,EAAAA,GAAI,CAACC,GAAI,IAAI9E,EAAM+E,YAAY3E,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBE,UAC/BH,EAAAA,EAAAA,KAAC+E,EAAM,CACLR,MAAO,yCAAsCxE,EAAMwE,QACnDC,IAAKzE,EAAMiF,UAGfjE,EAAAA,EAAAA,MAAA,OAAKd,UAAU,kBAAiBE,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,MAAAG,SAAKJ,EAAMiF,QACXjE,EAAAA,EAAAA,MAAA,MAAAZ,SAAA,CACGJ,EAAMkF,WAAW,IAAuB,IAArBlF,EAAMkF,WAAmB,QAAU,sBCWrE,EA1BkBlF,GACW,IAAvBA,EAAMmF,MAAMpC,QAEZ9C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQE,UACrBH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CAAAxE,UACHH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,yBAOVH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYE,SACvBJ,EAAMmF,MAAMC,KAAIC,IACfpF,EAAAA,EAAAA,KAACqF,EAAQ,CAEPP,GAAIM,EAAKN,GACTP,MAAOa,EAAKb,MACZS,KAAMI,EAAKJ,KACXC,WAAYG,EAAKE,OAAOxC,QAJnBsC,EAAKN,Q,iCCdpB,MA8BA,EA9BcS,KACZ,MAAOC,EAAaC,IAAkBrD,EAAAA,EAAAA,aAEhC,UAAEF,EAAS,MAAEzB,EAAK,YAAE+B,EAAW,WAAE6B,IAAepC,EAAAA,EAAAA,KActD,OAZAgC,EAAAA,EAAAA,YAAU,KACWvB,WACjB,IACE,MAAMe,QAAqBjB,EACzBkD,oDAEFD,EAAehC,EAAakC,MAC9B,CAAE,MAAO3B,GAAM,GAEjB4B,EAAY,GACX,CAACpD,KAGFzB,EAAAA,EAAAA,MAACU,EAAAA,SAAc,CAAAtB,SAAA,EACbH,EAAAA,EAAAA,KAAC6F,EAAAA,EAAU,CAACpF,MAAOA,EAAOH,QAAS+D,IAClCnC,IACClC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQE,UACrBH,EAAAA,EAAAA,KAAC8F,EAAAA,EAAc,CAACC,WAAW,OAG7B7D,GAAasD,IAAexF,EAAAA,EAAAA,KAACgG,EAAS,CAACd,MAAOM,MACjC,C","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop.js\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content  ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useRef, useCallback, useEffect, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHtttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHtttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHtttpRequests.current = activeHtttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHtttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UserItem.css\";\n\nconst UserItem = (props) => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from \"react\";\n\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/\"\n        );\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay={true} />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"names":["props","_jsx","className","style","children","Modal","onCancel","onClear","header","show","error","footer","Button","onClick","ModalOverlay","content","_jsxs","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","createPortal","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","setError","activeHtttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","src","image","alt","width","height","Card","Link","to","id","Avatar","name","placeCount","items","map","user","UserItem","places","Users","loadedUsers","setLoadedUsers","process","users","fetchUsers","ErrorModal","LoadingSpinner","asOverlay","UsersList"],"sourceRoot":""}