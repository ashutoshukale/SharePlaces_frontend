{"version":3,"file":"static/js/420.6699842b.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import React from \"react\";\r\nimport { useRef, useEffect } from \"react\";\r\nimport \"./Map.css\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n  useEffect(() => {}, []);\r\n  const defaultProps = {\r\n    center: props.center,\r\n    zoom: props.zoom,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={{ height: \"100%\", width: \"100%\" }}\r\n    >\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"\" }}\r\n        defaultCenter={defaultProps.center}\r\n        defaultZoom={defaultProps.zoom}\r\n      >\r\n        <AnyReactComponent\r\n          lng={defaultProps.center.lng}\r\n          lat={defaultProps.center.lat}\r\n          text=\"My Marker\"\r\n        />\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./PlaceItem.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      const responseData = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        header=\"Are your Sure ?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n        onCancel={cancelDeleteHandler}\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place ? Please note that it\r\n          can't be undone\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && (\r\n            <div className=\"center\">\r\n              <LoadingSpinner asOverlay={true} />\r\n            </div>\r\n          )}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT THIS PLACE</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport \"./PlaceList.css\";\r\nimport Button from \"../../shared/components/FormElements/Button.js\";\r\nimport Card from \"../../shared/components/UIElements/Card.js\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Places Found. Maybe Create One?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nexport const DUMMY_PLACES = [\r\n  {\r\n    id: \"p1\",\r\n    title: \"Empire State Building\",\r\n    description: \"One of the most famous places\",\r\n    imageUrl:\r\n      \"https://th.bing.com/th/id/OLC.lp5u7VeEyp0Iew480x360?&rs=1&pid=ImgDetMain\",\r\n    address: \"350 5th Ave, New York, NY 10001\",\r\n    location: {\r\n      lat: 40.74837,\r\n      lng: -73.98464,\r\n    },\r\n    creator: \"u1\",\r\n  },\r\n  {\r\n    id: \"p2\",\r\n    title: \"Empire State EState\",\r\n    description: \"One of the most famous places\",\r\n    imageUrl:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/View_of_Empire_State_Building_from_Rockefeller_Center_New_York_City_dllu_Cropped.jpg/330px-View_of_Empire_State_Building_from_Rockefeller_Center_New_York_City_dllu_Cropped.jpg\",\r\n    address: \"350 5th Ave, New York, NY 10001\",\r\n    location: {\r\n      lat: 40.74837,\r\n      lng: -73.98464,\r\n    },\r\n    creator: \"u2\",\r\n  },\r\n];\r\nconst UserPlaces = (props) => {\r\n  const userId = useParams().userId;\r\n  const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUserPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/places/user/${userId}/`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchUserPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay={true} />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop.js\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content  ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useRef, useCallback, useEffect, useState } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHtttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHtttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHtttpRequests.current = activeHtttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHtttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n"],"names":["AnyReactComponent","_ref","text","_jsx","children","props","mapRef","useRef","useEffect","defaultProps","center","zoom","ref","className","style","height","width","GoogleMapReact","bootstrapURLKeys","key","defaultCenter","defaultZoom","lng","lat","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","isLoading","sendRequest","error","clearError","useHttpClient","cancelDeleteHandler","_jsxs","React","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","Map","coordinates","inverse","danger","async","id","Authorization","token","onDelete","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","map","place","PlaceItem","creator","location","onDeletePlace","DUMMY_PLACES","imageUrl","useParams","loadedPlaces","setLoadedPlaces","responseData","places","fetchUserPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","createPortal","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHtttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}